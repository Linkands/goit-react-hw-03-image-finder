{"version":3,"sources":["Components/ImageGalleryItem/ImageGalleryItem.jsx","Components/ImageGallery/ImageGallery.jsx","Components/SearchBar/SearchBar.jsx","Components/Button/Button.jsx","Components/Modal/Modal.jsx","services/api.js","App.js","index.js"],"names":["ImageGalleryItem","picture","toggleModal","className","src","webformatURL","alt","tags","onClick","largeImageURL","id","ImageGallery","picturesData","map","SearchBar","onSearch","onSubmit","e","preventDefault","target","elements","searchQuery","value","type","name","autoComplete","autoFocus","placeholder","Button","Modal","onImageClick","code","props","onClose","onBackdropClick","currentTarget","window","addEventListener","this","removeEventListener","onOpen","Component","axios","defaults","baseURL","fetchImages","page","a","get","response","data","hits","App","state","pictures","query","reqStatus","showModal","modalImage","handleFormSubmit","setState","pageIncrease","openModal","closeModal","_","prevState","images","setTimeout","scrollTo","top","document","documentElement","scrollHeight","behavior","showSearchButton","length","color","height","width","timeout","ReactDOM","render","StrictMode","getElementById"],"mappings":"gSAiBeA,MAff,YAAqD,IAAzBC,EAAwB,EAAxBA,QAASC,EAAe,EAAfA,YACnC,OACE,mCACE,oBAAqBC,UAAU,mBAA/B,SACE,qBACEC,IAAKH,EAAQI,aACbC,IAAKL,EAAQM,KACbJ,UAAU,yBACVK,QAAS,kBAAMN,EAAYD,EAAQQ,mBAL9BR,EAAQS,OCYRC,MAdf,YAAsD,IAA9BC,EAA6B,EAA7BA,aAAcV,EAAe,EAAfA,YACpC,OACE,oBAAIC,UAAU,eAAd,SACGS,EAAaC,KAAI,SAACZ,GAAD,OAChB,cAAC,EAAD,CAEEA,QAASA,EACTC,YAAaA,GAFRD,EAAQS,UCoBRI,MAzBf,YAAkC,IAAbC,EAAY,EAAZA,SAKnB,OACE,wBAAQZ,UAAU,YAAlB,SACE,uBAAMA,UAAU,aAAaa,SANZ,SAACC,GACpBA,EAAEC,iBACFH,EAASE,EAAEE,OAAOC,SAASC,YAAYC,QAIrC,UACE,wBAAQC,KAAK,SAASpB,UAAU,oBAAhC,SACE,sBAAMA,UAAU,0BAAhB,sBAGF,uBACEA,UAAU,mBACVqB,KAAK,cACLD,KAAK,OACLE,aAAa,MACbC,WAAS,EACTC,YAAY,mCCTPC,MAVf,YAA8B,IAAZpB,EAAW,EAAXA,QAChB,OACE,mCACE,wBAAQe,KAAK,SAASpB,UAAU,SAASK,QAASA,EAAlD,0BCWeqB,E,4MAKnBC,aAAe,SAACb,GACC,WAAXA,EAAEc,MACJ,EAAKC,MAAMC,W,EAQfC,gBAAkB,SAACjB,GACbA,EAAEkB,gBAAkBlB,EAAEE,QACxB,EAAKa,MAAMC,W,uDAhBf,WACEG,OAAOC,iBAAiB,UAAWC,KAAKR,gB,kCAS1C,WACEM,OAAOG,oBAAoB,UAAWD,KAAKR,gB,oBAS7C,WACE,OACE,qBAAK3B,UAAU,UAAUK,QAAS8B,KAAKJ,gBAAvC,SACE,qBAAK/B,UAAU,QAAf,SACE,qBAAKC,IAAKkC,KAAKN,MAAMQ,OAAQlC,IAAKgC,KAAKN,MAAMQ,iB,GAzBpBC,a,iBCdnCC,IAAMC,SAASC,QAAU,2BAClB,IAAMC,EAAW,uCAAG,WAAOxB,EAAayB,GAApB,eAAAC,EAAA,4DACT,qCADS,SAEFL,IAAMM,IAAN,aACf3B,EADe,iBACKyB,EADL,gBADP,qCACO,yDAFE,cAEnBG,EAFmB,yBAKlBA,EAASC,KAAKC,MALI,2CAAH,wD,iBCOHC,E,4MACnBC,MAAQ,CACNC,SAAU,GACVR,KAAM,EACNS,MAAO,KACPC,UAAW,OACXC,WAAW,EACXC,WAAY,M,EAGdC,iBAAmB,SAACtC,GAClB,EAAKuC,SAAS,CAAEL,MAAOlC,EAAayB,KAAM,EAAGQ,SAAU,M,EAGzDO,aAAe,WACb,EAAKD,SAAS,CAAEd,KAAM,EAAKO,MAAMP,KAAO,K,EAO1CgB,UAAY,SAACZ,GACX,EAAKU,SAAS,CAAEH,WAAW,EAAMC,WAAYR,K,EAG/Ca,WAAa,WACX,EAAKH,SAAS,CAAEH,WAAW,EAAOC,WAAY,Q,+FAUhD,WAAyBM,EAAGC,GAA5B,qBAAAlB,EAAA,2DAC0BT,KAAKe,MAArBE,EADV,EACUA,MAAOT,EADjB,EACiBA,KAEXmB,EAAUV,QAAUA,GAASU,EAAUnB,OAASA,EAHtD,uBAIIR,KAAKsB,SAAS,CAAEJ,UAAW,YAJ/B,SAKyBX,EAAYU,EAAOT,GAL5C,OAKUoB,EALV,OAMI5B,KAAKsB,UAAS,SAACK,GAAD,MAAgB,CAC5BX,SAAS,GAAD,mBAAMW,EAAUX,UAAhB,YAA6BY,IACrCV,UAAW,eARjB,OAYMV,EAAO,GAMTqB,YALe,kBACb/B,OAAOgC,SAAS,CACdC,IAAKC,SAASC,gBAAgBC,aAC9BC,SAAU,aAEK,KAlBvB,gD,6EAsBA,WACE,MAA2CnC,KAAKe,MAAxCC,EAAR,EAAQA,SAAUE,EAAlB,EAAkBA,UAAWC,EAA7B,EAA6BA,UACvBiB,EAAmBpB,EAASqB,OAAS,EAC3C,OACE,sBAAKxE,UAAU,MAAf,UACE,cAAC,EAAD,CAAWY,SAAUuB,KAAKqB,mBAC1B,cAAC,EAAD,CACE/C,aAAc0C,EACdpD,YAAaoC,KAAKwB,YAEL,YAAdN,GACC,cAAC,IAAD,CACEjC,KAAK,OACLqD,MAAM,UACNC,OAAQ,IACRC,MAAO,IACPC,QAAS,MAIZL,GAAoB,cAAC,EAAD,CAAQlE,QAAS8B,KAAKuB,eAC1CJ,GACC,cAAC,EAAD,CACExB,QAASK,KAAKyB,WACdvB,OAAQF,KAAKe,MAAMK,oB,GAnFEjB,aCLjCuC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFZ,SAASa,eAAe,W","file":"static/js/main.f82c8102.chunk.js","sourcesContent":["import React from 'react'\n\nfunction ImageGalleryItem({ picture, toggleModal }) {\n  return (\n    <>\n      <li key={picture.id} className=\"ImageGalleryItem\">\n        <img\n          src={picture.webformatURL}\n          alt={picture.tags}\n          className=\"ImageGalleryItem-image\"\n          onClick={() => toggleModal(picture.largeImageURL)}\n        />\n      </li>\n    </>\n  )\n}\n\nexport default ImageGalleryItem\n","import React from 'react'\nimport ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem'\n\nfunction ImageGallery({ picturesData, toggleModal }) {\n  return (\n    <ul className=\"ImageGallery\">\n      {picturesData.map((picture) => (\n        <ImageGalleryItem\n          key={picture.id}\n          picture={picture}\n          toggleModal={toggleModal}\n        ></ImageGalleryItem>\n      ))}\n    </ul>\n  )\n}\n\nexport default ImageGallery\n","import React, { Component } from 'react'\n// import './SearchBar.module.css'\n\nfunction SearchBar({ onSearch }) {\n  const handleSearch = (e) => {\n    e.preventDefault()\n    onSearch(e.target.elements.searchQuery.value)\n  }\n  return (\n    <header className=\"SearchBar\">\n      <form className=\"SearchForm\" onSubmit={handleSearch}>\n        <button type=\"submit\" className=\"SearchForm-button\">\n          <span className=\"SearchForm-button-label\">Search</span>\n        </button>\n\n        <input\n          className=\"SearchForm-input\"\n          name=\"searchQuery\"\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search images and photos\"\n        />\n      </form>\n    </header>\n  )\n}\n\nexport default SearchBar\n\n// export default class SearchBar extends Component {\n//   state = {\n//     query: '',\n//   }\n\n//   changeQuery = (e) => {\n//     this.setState({ query: e.target.value.toLowerCase() })\n//   }\n\n//   handleSubmit = (e) => {\n//     e.preventDefault()\n\n//     this.props.onSubmit(this.state.query)\n//     this.setState({ query: '' })\n//   }\n\n//   render() {\n//     return (\n//       <header className=\"SearchBar\">\n//         <form onSubmit={this.handleSubmit} className=\"SearchForm\">\n//           <button type=\"submit\" className=\"SearchForm-button\">\n//             <span className=\"SearchForm-button-label\">Search</span>\n//           </button>\n\n//           <input\n//             className=\"SearchForm-input\"\n//             type=\"text\"\n//             autoComplete=\"off\"\n//             autoFocus\n//             placeholder=\"Search images and photos\"\n//             // value={this.state.query}\n//             onChange={this.changeQuery}\n//             value={this.state.query}\n//           />\n//         </form>\n//       </header>\n//     )\n//   }\n// }\n","import React from 'react'\n\nfunction Button({ onClick }) {\n  return (\n    <>\n      <button type=\"button\" className=\"Button\" onClick={onClick}>\n        Load more\n      </button>\n    </>\n  )\n}\n\nexport default Button\n","// import React from 'react'\n\n// function Modal({ largeImageURL, tags, onBackdropClick }) {\n//   return (\n//     <div className=\"Overlay\" onClick={onBackdropClick}>\n//       <div className=\"Modal\">\n//         <img src={largeImageURL} alt={tags} />\n//       </div>\n//     </div>\n//   )\n// }\n\n// export default Modal\n\nimport React, { Component } from 'react'\n\nexport default class Modal extends Component {\n  componentDidMount() {\n    window.addEventListener('keydown', this.onImageClick)\n  }\n\n  onImageClick = (e) => {\n    if (e.code === 'Escape') {\n      this.props.onClose()\n    }\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('keydown', this.onImageClick)\n  }\n\n  onBackdropClick = (e) => {\n    if (e.currentTarget === e.target) {\n      this.props.onClose()\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"Overlay\" onClick={this.onBackdropClick}>\n        <div className=\"Modal\">\n          <img src={this.props.onOpen} alt={this.props.onOpen} />\n        </div>\n      </div>\n    )\n  }\n}\n","import axios from 'axios'\n// import ApiService from './Components/apiService/ApiService'\naxios.defaults.baseURL = 'https://pixabay.com/api/'\nexport const fetchImages = async (searchQuery, page) => {\n  const API_KEY = '21748955-40ae248ad9ce65df002076b41'\n  const response = await axios.get(\n    `?q=${searchQuery}&page=${page}&key=${API_KEY}&image_type=photo&orientation=horizontal&per_page=12`,\n  )\n  return response.data.hits\n}\n","import { Component } from 'react'\n\nimport ImageGallery from './Components/ImageGallery/ImageGallery'\nimport SearchBar from './Components/SearchBar/SearchBar'\nimport Button from './Components/Button/Button'\nimport Modal from './Components/Modal/Modal'\nimport { fetchImages } from './services/api.js'\n\nimport Loader from 'react-loader-spinner'\n\nexport default class App extends Component {\n  state = {\n    pictures: [],\n    page: 1,\n    query: null,\n    reqStatus: 'idle',\n    showModal: false,\n    modalImage: null,\n  }\n\n  handleFormSubmit = (searchQuery) => {\n    this.setState({ query: searchQuery, page: 1, pictures: [] })\n  }\n\n  pageIncrease = () => {\n    this.setState({ page: this.state.page + 1 })\n  }\n\n  // toggleModal = (e) => {\n  //   this.setState({ showModal: !this.state.showModal })\n  // }\n\n  openModal = (data) => {\n    this.setState({ showModal: true, modalImage: data })\n  }\n\n  closeModal = () => {\n    this.setState({ showModal: false, modalImage: null })\n  }\n\n  // closeModal = (e) => {\n  //   console.log(e.code)\n  //   if (e.currentTarget === e.target || e.code === 'Escape') {\n  //     this.toggleModal()\n  //   }\n  // }\n\n  async componentDidUpdate(_, prevState) {\n    const { query, page } = this.state\n\n    if (prevState.query !== query || prevState.page !== page) {\n      this.setState({ reqStatus: 'pending' })\n      const images = await fetchImages(query, page)\n      this.setState((prevState) => ({\n        pictures: [...prevState.pictures, ...images],\n        reqStatus: 'resolved',\n      }))\n    }\n\n    if (page > 1) {\n      const scroll = () =>\n        window.scrollTo({\n          top: document.documentElement.scrollHeight,\n          behavior: 'smooth',\n        })\n      setTimeout(scroll, 500)\n    }\n  }\n\n  render() {\n    const { pictures, reqStatus, showModal } = this.state\n    const showSearchButton = pictures.length > 0\n    return (\n      <div className=\"App\">\n        <SearchBar onSearch={this.handleFormSubmit}></SearchBar>\n        <ImageGallery\n          picturesData={pictures}\n          toggleModal={this.openModal}\n        ></ImageGallery>\n        {reqStatus === 'pending' && (\n          <Loader\n            type=\"Puff\"\n            color=\"#00BFFF\"\n            height={100}\n            width={100}\n            timeout={3000} //3 secs\n          />\n        )}\n\n        {showSearchButton && <Button onClick={this.pageIncrease}></Button>}\n        {showModal && (\n          <Modal\n            onClose={this.closeModal}\n            onOpen={this.state.modalImage}\n          ></Modal>\n        )}\n      </div>\n    )\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}